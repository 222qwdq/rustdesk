name: Build RustDesk Android APK

on:
  workflow_dispatch:
    inputs:
      arch:
        description: 'Target architecture'
        required: true
        default: 'aarch64'
      target:
        description: 'Target triple'
        required: true
        default: 'aarch64-linux-android'

env:
  ANDROID_FLUTTER_VERSION: "3.24.5"
  NDK_VERSION: "25.2.9519653"
  RUST_VERSION: "1.71.0"
  CARGO_NDK_VERSION: "2.2.1"
  VCPKG_COMMIT_ID: "your_vcpkg_commit_id_here" # 改成原版对应 commit

jobs:
  build-rustdesk-android:
    name: Build RustDesk Android APK
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        job:
          - { arch: aarch64, target: aarch64-linux-android }
          - { arch: armv7, target: armv7-linux-androideabi }
          - { arch: x86_64, target: x86_64-linux-android }

    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          android: false
          dotnet: true
          haskell: true
          docker-images: true

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake curl gcc-multilib g++ g++-multilib \
               libayatana-appindicator3-dev libasound2-dev libc6-dev libclang-dev \
               libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
               libgtk-3-dev libpam0g-dev libpulse-dev libva-dev libxcb-randr0-dev \
               libxcb-shape0-dev libxcb-xfixes0-dev libxdo-dev libxfixes-dev llvm-dev \
               nasm ninja-build openjdk-17-jdk-headless pkg-config tree wget

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.ANDROID_FLUTTER_VERSION }}

      - name: Patch Flutter
        run: |
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{ env.ANDROID_FLUTTER_VERSION }} ]] && git apply ${{ github.workspace }}/.github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          add-to-path: true

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: /opt/artifacts/vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        run: |
          case ${{ matrix.job.target }} in
            aarch64-linux-android) ANDROID_TARGET=arm64-v8a ;;
            armv7-linux-androideabi) ANDROID_TARGET=armeabi-v7a ;;
            x86_64-linux-android) ANDROID_TARGET=x86_64 ;;
          esac
          ./flutter/build_android_deps.sh "${ANDROID_TARGET}"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt

      - name: Build rustdesk lib
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          rustup target add ${{ matrix.job.target }}
          cargo install cargo-ndk --version ${{ env.CARGO_NDK_VERSION }} --locked
          case ${{ matrix.job.target }} in
            aarch64-linux-android)
              ./flutter/ndk_arm64.sh
              mkdir -p ./flutter/android/app/src/main/jniLibs/arm64-v8a
              cp ./target/${{ matrix.job.target }}/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so
            ;;
            armv7-linux-androideabi)
              ./flutter/ndk_arm.sh
              mkdir -p ./flutter/android/app/src/main/jniLibs/armeabi-v7a
              cp ./target/${{ matrix.job.target }}/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/armeabi-v7a/librustdesk.so
            ;;
            x86_64-linux-android)
              ./flutter/ndk_x64.sh
              mkdir -p ./flutter/android/app/src/main/jniLibs/x86_64
              cp ./target/${{ matrix.job.target }}/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/x86_64/librustdesk.so
            ;;
          esac

      - name: Build Android APK
        run: |
          cd flutter/android
          ./gradlew assembleRelease
          ls -lh app/build/outputs/apk/release/
